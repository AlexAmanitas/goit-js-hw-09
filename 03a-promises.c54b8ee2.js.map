{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,aAAcJ,SAASC,cAAc,WAsBvC,SAASI,EAAcC,G,IAAEC,EAAFD,EAAEC,SAAUR,EAAZO,EAAYP,MACjC,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EACEK,EAAAlB,GAASmB,OAAOC,QAAQ,qBAAoCC,OAAfV,EAAS,QAAYU,OAANlB,EAAM,QAIpEW,EACEI,EAAAlB,GAASmB,OAAOG,QAAQ,oBAAmCD,OAAfV,EAAS,QAAYU,OAANlB,EAAM,O,GAGpEA,E,IAlCPD,EAAKM,aAAae,iBAAiB,SAEnC,SAAkBC,GAChBA,EAAMC,iBACN,IAAMtB,GAASD,EAAKC,MAAMuB,MACpBpB,GAAQJ,EAAKI,KAAKoB,MAClBnB,GAAUL,EAAKK,OAAOmB,OAI9B,SAAoBvB,EAAOG,EAAMC,GAC/B,IAAK,IAAIoB,EAAI,EAAGA,GAAKpB,EAAQoB,GAAK,EAAG,CAEnClB,EAAc,CAAEE,SADDgB,EACWxB,UAC1BA,GAASG,C,EAPXsB,CAAWzB,EAAOG,EAAMC,E,IA8B1BE,EAAc,GACXoB,MAAK,SAAAnB,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MACjB2B,QAAQC,IAAI,uBAAwCV,OAAfV,EAAS,QAAYU,OAANlB,EAAM,M,IAE3D6B,OAAM,SAAAtB,G,IAAGC,EAAQD,EAARC,SAAUR,EAAKO,EAALP,MAClB2B,QAAQC,IAAI,sBAAqCV,OAAfV,EAAS,QAAYU,OAANlB,EAAM,M","sources":["src/js/03a-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  submitButton: document.querySelector('button'),\n};\nlet intervalId = null;\n\nrefs.submitButton.addEventListener('click', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = +refs.delay.value;\n  const step = +refs.step.value;\n  const amount = +refs.amount.value;\n  getPromise(delay, step, amount);\n}\n\nfunction getPromise(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    let position = i;\n    createPromise({ position, delay });\n    delay += step;\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve(\n          Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        // Reject\n        reject(\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n        );\n      }\n    }, delay);\n  });\n}\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iU1Pc","parcelRequire","$76480aa3bb613d73$var$refs","delay","document","querySelector","step","amount","submitButton","$76480aa3bb613d73$var$createPromise","param","position","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","event","preventDefault","value","i","$76480aa3bb613d73$var$getPromise","then","console","log","catch"],"version":3,"file":"03a-promises.c54b8ee2.js.map"}